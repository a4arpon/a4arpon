services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: userP@ssw0rd
    volumes:
      - ./DockerDB/MongoDB:/data/db
    ports:
      - "27017:27017"
    restart: "no"

  postgres:
    image: postgres:alpine
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: userP@ssw0rd
    volumes:
      - ./DockerDB/Postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: "no"

  redis:
    image: redis:alpine
    container_name: redis
    command: redis-server --requirepass userP@ssw0rd
    volumes:
      - ./DockerDB/Redis:/data
    ports:
      - "6379:6379"
    restart: "no"

  kafka:
    image: 'bitnami/kafka:latest'
    hostname: kafka
    container_name: kafka
    ports:
     - '9092:9092'
    volumes:
      - ./DockerDB/kafka-data:/var/lib/kafka/data
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_BROKER_ID: "1"
      KAFKA_KRAFT_CLUSTER_ID: "LelM2dIFQkiUFvXCEcqRWA"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_CFG_NODE_ID: "1"   # Added Node ID
      ALLOW_PLAINTEXT_LISTENER: "yes"

volumes:
  mongodb_data:
  postgres_data:
  redis_data:
  kafka_data:
